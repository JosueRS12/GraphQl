{"version":3,"sources":["../src/schema.js"],"names":["typeDefs","resolvers"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;AACA;AACA,IAAMA,QAAQ,kZAAd;;eA0Be,wCAAqB;AAClCA,EAAAA,QAAQ,EAAEA,QADwB;AAElCC,EAAAA,SAAS,EAAEA;AAFuB,CAArB,C","sourcesContent":["import {makeExecutableSchema} from \"graphql-tools\";\nimport {resolvers} from \"./resolvers\";\n\n// the client be able to use this types\n// type mutation allow insert external values...\nconst typeDefs = `\n    type Query {\n      hello: String      \n      greet(name: String!): String\n      tasks: [Task]\n    }\n\n    type Task{\n      _id: ID\n      title: String!\n      description: String!\n      number: Int\n    }\n  \n    type Mutation{  \n      createTask(input: TaskInput): Task\n    }\n\n    input TaskInput{\n      title: String!\n      description: String!\n      number: Int\n    }\n\n`;\n\nexport default makeExecutableSchema({\n  typeDefs: typeDefs,\n  resolvers: resolvers\n});\n"],"file":"schema.js"}